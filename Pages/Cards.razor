@inject IJSRuntime js;

@if (state == 1) {
    <button class="draw-cards-button" id="playDraw" @onclick="drawCards">DRAW</button>
} else if (state == 2) {
    <section class="pick-outcome">
        <button class="play vic" @onclick="@(() => {guessOutcome(1);OnClick.InvokeAsync(winner+"0");})">VICTORY!</button>
        <button class="play def" @onclick="@(() => {guessOutcome(1);OnClick.InvokeAsync(winner+"1");})">DEFEAT!</button>
    </section>
} else {
    <p></p>
}

@if (drew)
{
    <article class="cards" style="position: relative; top:@(cardsPos + "px");">
        <section class="str">
            <h2>STRENGHT</h2>
            <img class="card" src="strenghtk2.png">
            <p>@stats[0]</p>
        </section>
        <section class="str">
            <h2>AGILITY</h2>
            <img class="card" src="agilityk2.png">
            <p>@stats[1]</p>
        </section>
        <section class="agi">
            <h2>RESISTANCE</h2>
            <img class="card" src="resistancek2.png">
            <p>@stats[2]</p>
        </section>
        <section class="str">
            <h2>STRENGHT</h2>
            <img class="card" src="agilityk1.png">
            <p>@stats[randCard]</p>
        </section>
    </article>
}

<audio id="drawPlayer">
    <source src="sounds/draw.wav" type="audio/wav">
</audio>

@code {

    [Parameter]
    public int state {get; set;}
    private bool drew = false;
    private int cardsPos = 300, randCard;

    private string winner;

    private int[] stats = new int[6];


    [Parameter] public EventCallback<string> OnClick { get; set; }
    private async void drawCards()
    {
        await PlayAudioFile("draw");
        Random random = new Random();
        stats[0] = random.Next(1, 11);
        stats[1] = random.Next(1, 11);
        stats[2] = random.Next(1, 11);
        stats[3] = random.Next(1, 11);
        stats[4] = random.Next(1, 11);
        stats[5] = random.Next(1, 11);
        randCard = random.Next(3, 6);
        int p1Sum = stats[0]+stats[1]+stats[2];
        int p2Sum = stats[3]+stats[4]+stats[5];
        if (p1Sum > p2Sum) {
            winner = "0";
        } else if (p1Sum < p2Sum) {
            winner = "1";
        } else {
            winner = "2";
        }
        await Task.Delay(300);
        drew = true;
        while (cardsPos >= -910)
        {
            await Task.Delay(1);
            cardsPos -= 18;
            StateHasChanged();
        }
        await Task.Delay(20);
        cardsPos = -900;
        state = 2;
        StateHasChanged();
    }
    
    private void guessOutcome(int outcome) {
        drew = false;
        StateHasChanged();
    }
    async Task PlayAudioFile(string name)
    {
        string file = "/sounds/"+name+".wav";
        await js.InvokeVoidAsync("PlayAudioFile", file);
    }
}